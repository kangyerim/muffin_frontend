{"ast":null,"code":"var _jsxFileName = \"/Users/boogiewoogie/WebstormProjects/cocoamilk/src/opinion/OpinionRegister.js\";\nimport React, { useState } from \"react\";\nimport ReactQuill from 'react-quill';\nimport './styles.css';\nimport PropTypes from 'prop-types';\nexport const CircularBadge = ({\n  size = 'default',\n  color,\n  children\n}) => {\n  let css = [];\n  css.push(color);\n  css = css.join(' ');\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: `badge badge-circle badge-${size} ${css}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, children);\n};\nexport const CircularButton = ({\n  size = 'default',\n  color = 'blue',\n  outlined = false,\n  flat = false,\n  raised = false,\n  children,\n  props\n}) => {\n  let css = [];\n  if (raised) css.push('btn-raised');\n\n  if (flat) {\n    return /*#__PURE__*/React.createElement(\"button\", Object.assign({\n      className: `btn btn-circle btn-circle-${size} btn-flat btn-flat-${color} ${css.join(' ')}`\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }), children);\n  }\n\n  if (outlined) {\n    return /*#__PURE__*/React.createElement(\"button\", Object.assign({\n      className: `btn btn-circle btn-circle-${size} btn-outlined btn-outlined-${color} ${css.join(' ')}`\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(\"button\", Object.assign({\n    className: `btn btn-circle btn-circle-${size} btn-${color} ${css.join(' ')}`\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), children);\n};\n\nconst OpinionRegister = () => {\n  const [value, setValue] = useState(\"sample\");\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-2xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, \"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\\uD558\\uAE30\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CircularButton, {\n    children: \"돌아가기\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CircularButton, {\n    children: \"등록하기\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-full mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ReactQuill, {\n    theme: \"snow\",\n    value: value,\n    onChange: setValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(CircularBadge, {\n    color: \"blue\",\n    size: \"default\",\n    children: \"태그하기\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }));\n};\n\nOpinionRegister.propTypes = {\n  size: PropTypes.oneOf(['sm', 'default', 'lg']),\n  flat: PropTypes.bool,\n  raised: PropTypes.bool,\n  color: PropTypes.string,\n  children: PropTypes.any\n};\nCircularBadge.propTypes = {\n  size: PropTypes.oneOf(['sm', 'default', 'lg']),\n  color: PropTypes.string,\n  children: PropTypes.any\n};\nexport default OpinionRegister;","map":{"version":3,"sources":["/Users/boogiewoogie/WebstormProjects/cocoamilk/src/opinion/OpinionRegister.js"],"names":["React","useState","ReactQuill","PropTypes","CircularBadge","size","color","children","css","push","join","CircularButton","outlined","flat","raised","props","OpinionRegister","value","setValue","propTypes","oneOf","bool","string","any"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,cAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,IAAI,GAAG,SAAR;AAAmBC,EAAAA,KAAnB;AAA0BC,EAAAA;AAA1B,CAAD,KAAyC;AAClE,MAAIC,GAAG,GAAG,EAAV;AACAA,EAAAA,GAAG,CAACC,IAAJ,CAASH,KAAT;AACAE,EAAAA,GAAG,GAAGA,GAAG,CAACE,IAAJ,CAAS,GAAT,CAAN;AAEA,sBACI;AAAM,IAAA,SAAS,EAAG,4BAA2BL,IAAK,IAAGG,GAAI,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACDD,QADC,CADJ;AAKH,CAVM;AAWP,OAAO,MAAMI,cAAc,GAAG,CAAC;AAACN,EAAAA,IAAI,GAAG,SAAR;AAAmBC,EAAAA,KAAK,GAAG,MAA3B;AAAmCM,EAAAA,QAAQ,GAAG,KAA9C;AACIC,EAAAA,IAAI,GAAG,KADX;AACkBC,EAAAA,MAAM,GAAG,KAD3B;AACkCP,EAAAA,QADlC;AAC4CQ,EAAAA;AAD5C,CAAD,KACwD;AAClF,MAAIP,GAAG,GAAG,EAAV;AACA,MAAIM,MAAJ,EAAYN,GAAG,CAACC,IAAJ,CAAS,YAAT;;AACZ,MAAII,IAAJ,EAAU;AACN,wBACI;AACI,MAAA,SAAS,EAAG,6BAA4BR,IAAK,sBAAqBC,KAAM,IAAGE,GAAG,CAACE,IAAJ,CACvE,GADuE,CAEzE;AAHN,OAIQK,KAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKKR,QALL,CADJ;AASH;;AACD,MAAIK,QAAJ,EAAc;AACV,wBACI;AACI,MAAA,SAAS,EAAG,6BAA4BP,IAAK,8BAA6BC,KAAM,IAAGE,GAAG,CAACE,IAAJ,CAC/E,GAD+E,CAEjF;AAHN,OAIQK,KAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKKR,QALL,CADJ;AASH;;AACD,sBACI;AACI,IAAA,SAAS,EAAG,6BAA4BF,IAAK,QAAOC,KAAM,IAAGE,GAAG,CAACE,IAAJ,CACzD,GADyD,CAE3D;AAHN,KAIQK,KAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKKR,QALL,CADJ;AASH,CAnCM;;AAsCP,MAAMS,eAAe,GAAG,MAAM;AAE1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,QAAD,CAAlC;AAEA,sBAAO,uDACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAI,IAAA,SAAS,EAAE,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAAJ,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAE,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAE,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ,CADJ,CADG,eAUH;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,MAAlB;AAAyB,IAAA,KAAK,EAAEgB,KAAhC;AAAuC,IAAA,QAAQ,EAAEC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAVG,eAeH,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAE,MAAtB;AAA8B,IAAA,IAAI,EAAE,SAApC;AAA+C,IAAA,QAAQ,EAAE,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfG,CAAP;AAiBH,CArBD;;AAuBAF,eAAe,CAACG,SAAhB,GAA4B;AACxBd,EAAAA,IAAI,EAAEF,SAAS,CAACiB,KAAV,CAAgB,CAAC,IAAD,EAAO,SAAP,EAAkB,IAAlB,CAAhB,CADkB;AAExBP,EAAAA,IAAI,EAAEV,SAAS,CAACkB,IAFQ;AAGxBP,EAAAA,MAAM,EAAEX,SAAS,CAACkB,IAHM;AAIxBf,EAAAA,KAAK,EAAEH,SAAS,CAACmB,MAJO;AAKxBf,EAAAA,QAAQ,EAAEJ,SAAS,CAACoB;AALI,CAA5B;AAOAnB,aAAa,CAACe,SAAd,GAA0B;AACtBd,EAAAA,IAAI,EAAEF,SAAS,CAACiB,KAAV,CAAgB,CAAC,IAAD,EAAO,SAAP,EAAkB,IAAlB,CAAhB,CADgB;AAEtBd,EAAAA,KAAK,EAAEH,SAAS,CAACmB,MAFK;AAGtBf,EAAAA,QAAQ,EAAEJ,SAAS,CAACoB;AAHE,CAA1B;AAMA,eAAeP,eAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ReactQuill from 'react-quill';\nimport './styles.css';\nimport PropTypes from 'prop-types';\n\nexport const CircularBadge = ({size = 'default', color, children}) => {\n    let css = []\n    css.push(color)\n    css = css.join(' ')\n\n    return (\n        <span className={`badge badge-circle badge-${size} ${css}`}>\n      {children}\n    </span>\n    )\n}\nexport const CircularButton = ({size = 'default', color = 'blue', outlined = false,\n                                   flat = false, raised = false, children, props}) => {\n    let css = []\n    if (raised) css.push('btn-raised')\n    if (flat) {\n        return (\n            <button\n                className={`btn btn-circle btn-circle-${size} btn-flat btn-flat-${color} ${css.join(\n                    ' '\n                )}`}\n                {...props}>\n                {children}\n            </button>\n        )\n    }\n    if (outlined) {\n        return (\n            <button\n                className={`btn btn-circle btn-circle-${size} btn-outlined btn-outlined-${color} ${css.join(\n                    ' '\n                )}`}\n                {...props}>\n                {children}\n            </button>\n        )\n    }\n    return (\n        <button\n            className={`btn btn-circle btn-circle-${size} btn-${color} ${css.join(\n                ' '\n            )}`}\n            {...props}>\n            {children}\n        </button>\n    )\n}\n\n\nconst OpinionRegister = () => {\n\n    const [value, setValue] = useState(\"sample\")\n\n    return <>\n        <table>\n            <tr>\n                <td><h2 className={\"text-2xl\"}>게시글 작성하기</h2></td>\n                <td>\n                    <CircularButton children={\"돌아가기\"}/>\n                    <CircularButton children={\"등록하기\"}/>\n                </td>\n            </tr>\n        </table>\n        <div className=\"w-full mb-4\">\n            <div className=\"w-full\">\n                <ReactQuill theme=\"snow\" value={value} onChange={setValue} />\n            </div>\n        </div>\n        <CircularBadge color={\"blue\"} size={\"default\"} children={\"태그하기\"}/>\n    </>\n}\n\nOpinionRegister.propTypes = {\n    size: PropTypes.oneOf(['sm', 'default', 'lg']),\n    flat: PropTypes.bool,\n    raised: PropTypes.bool,\n    color: PropTypes.string,\n    children: PropTypes.any,\n}\nCircularBadge.propTypes = {\n    size: PropTypes.oneOf(['sm', 'default', 'lg']),\n    color: PropTypes.string,\n    children: PropTypes.any\n}\n\nexport default OpinionRegister;"]},"metadata":{},"sourceType":"module"}