{"ast":null,"code":"var _jsxFileName = \"/Users/boogiewoogie/WebstormProjects/cocoamilk/src/stocks/UnderlinedTabs.js\";\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../css/components/tabs.css\";\nexport const UnderlinedTabs = ({\n  tabs\n}) => {\n  const [openTab, setOpenTab] = useState([]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-wrap flex-col w-full tabs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex lg:flex-wrap flex-row lg:space-x-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, tabs.map((tab, key) => /*#__PURE__*/React.createElement(\"div\", {\n    key: key,\n    className: \"flex-none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setOpenTab(tab.index);\n    },\n    className: openTab === tab.index ? 'tab tab-underline tab-active' : 'tab tab-underline',\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 25\n    }\n  }, tab.title)))), tabs.map((tab, key) => /*#__PURE__*/React.createElement(\"div\", {\n    key: key,\n    className: `tab-content ${openTab !== tab.index ? 'hidden' : 'block'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, tab.content)));\n};\nUnderlinedTabs.propTypes = {\n  tabs: PropTypes.arrayOf(PropTypes.shape({\n    index: PropTypes.number,\n    content: PropTypes.element,\n    title: PropTypes.any\n  })).isRequired\n};\nexport default UnderlinedTabs;","map":{"version":3,"sources":["/Users/boogiewoogie/WebstormProjects/cocoamilk/src/stocks/UnderlinedTabs.js"],"names":["React","useState","PropTypes","UnderlinedTabs","tabs","openTab","setOpenTab","map","tab","key","index","title","content","propTypes","arrayOf","shape","number","element","any","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,4BAAP;AAEA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AACtC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,IAAI,CAACG,GAAL,CAAS,CAACC,GAAD,EAAMC,GAAN,kBACN;AAAK,IAAA,GAAG,EAAEA,GAAV;AAAe,IAAA,SAAS,EAAC,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,OAAO,EAAE,MAAM;AACXH,MAAAA,UAAU,CAACE,GAAG,CAACE,KAAL,CAAV;AACH,KAHL;AAII,IAAA,SAAS,EACLL,OAAO,KAAKG,GAAG,CAACE,KAAhB,GACM,8BADN,GAEM,mBAPd;AASI,IAAA,IAAI,EAAC,QATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUKF,GAAG,CAACG,KAVT,CADJ,CADH,CADL,CADJ,EAmBKP,IAAI,CAACG,GAAL,CAAS,CAACC,GAAD,EAAMC,GAAN,kBACN;AACI,IAAA,GAAG,EAAEA,GADT;AAEI,IAAA,SAAS,EAAG,eACRJ,OAAO,KAAKG,GAAG,CAACE,KAAhB,GAAwB,QAAxB,GAAmC,OACtC,EAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKF,GAAG,CAACI,OALT,CADH,CAnBL,CADJ;AA+BH,CAjCM;AAmCPT,cAAc,CAACU,SAAf,GAA2B;AACvBT,EAAAA,IAAI,EAAEF,SAAS,CAACY,OAAV,CACFZ,SAAS,CAACa,KAAV,CAAgB;AACZL,IAAAA,KAAK,EAAER,SAAS,CAACc,MADL;AAEZJ,IAAAA,OAAO,EAAEV,SAAS,CAACe,OAFP;AAGZN,IAAAA,KAAK,EAAET,SAAS,CAACgB;AAHL,GAAhB,CADE,EAMJC;AAPqB,CAA3B;AAUA,eAAehB,cAAf","sourcesContent":["import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../css/components/tabs.css\";\n\nexport const UnderlinedTabs = ({tabs}) => {\n    const [openTab, setOpenTab] = useState([])\n    return (\n        <div className=\"flex flex-wrap flex-col w-full tabs\">\n            <div className=\"flex lg:flex-wrap flex-row lg:space-x-2\">\n                {tabs.map((tab, key) => (\n                    <div key={key} className=\"flex-none\">\n                        <button\n                            onClick={() => {\n                                setOpenTab(tab.index)\n                            }}\n                            className={\n                                openTab === tab.index\n                                    ? 'tab tab-underline tab-active'\n                                    : 'tab tab-underline'\n                            }\n                            type=\"button\">\n                            {tab.title}\n                        </button>\n                    </div>\n                ))}\n            </div>\n            {tabs.map((tab, key) => (\n                <div\n                    key={key}\n                    className={`tab-content ${\n                        openTab !== tab.index ? 'hidden' : 'block'\n                    }`}>\n                    {tab.content}\n                </div>\n            ))}\n        </div>\n    )\n}\n\nUnderlinedTabs.propTypes = {\n    tabs: PropTypes.arrayOf(\n        PropTypes.shape({\n            index: PropTypes.number,\n            content: PropTypes.element,\n            title: PropTypes.any\n        })\n    ).isRequired\n}\n\nexport default UnderlinedTabs;"]},"metadata":{},"sourceType":"module"}