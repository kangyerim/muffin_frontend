{"ast":null,"code":"var _jsxFileName = \"/Users/boogiewoogie/WebstormProjects/cocoamilk/src/opinion/OpinionRegister.js\";\nimport React, { useState } from \"react\";\nimport ReactQuill from 'react-quill';\nimport './styles.css';\nimport PropTypes from 'prop-types';\nexport const CircularBadge = ({\n  size = 'default',\n  color,\n  children\n}) => {\n  let css = [];\n  css.push(color);\n  css = css.join(' ');\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: `badge badge-circle badge-${size} ${css}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, children);\n};\n\nconst OpinionRegister = () => {\n  const [value, setValue] = useState(\"sample\");\n  const size = 'default';\n  const color = 'blue';\n  const children = '등록하기';\n  const props = '';\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-2xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, \"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\\uD558\\uAE30\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", Object.assign({\n    className: `btn btn-circle btn-circle-${size} \n                                btn-flat btn-flat-${color}`\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }), children), /*#__PURE__*/React.createElement(\"button\", Object.assign({\n    className: `btn btn-circle btn-circle-${size} \n                                btn-flat btn-flat-${color}`\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }), children)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-full mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ReactQuill, {\n    theme: \"snow\",\n    value: value,\n    onChange: setValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(CircularBadge, {\n    color: \"blue\",\n    size: \"default\",\n    children: \"태그하기\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }));\n};\n\nOpinionRegister.propTypes = {\n  size: PropTypes.oneOf(['sm', 'default', 'lg']),\n  flat: PropTypes.bool,\n  raised: PropTypes.bool,\n  color: PropTypes.string,\n  children: PropTypes.any\n};\nCircularBadge.propTypes = {\n  size: PropTypes.oneOf(['sm', 'default', 'lg']),\n  color: PropTypes.string,\n  children: PropTypes.any\n};\nexport default OpinionRegister;","map":{"version":3,"sources":["/Users/boogiewoogie/WebstormProjects/cocoamilk/src/opinion/OpinionRegister.js"],"names":["React","useState","ReactQuill","PropTypes","CircularBadge","size","color","children","css","push","join","OpinionRegister","value","setValue","props","propTypes","oneOf","flat","bool","raised","string","any"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactQuill from 'react-quill';\nimport './styles.css';\nimport PropTypes from 'prop-types';\n\nexport const CircularBadge = ({size = 'default', color, children}) => {\n    let css = []\n    css.push(color)\n    css = css.join(' ')\n\n    return (\n        <span className={`badge badge-circle badge-${size} ${css}`}>\n      {children}\n    </span>\n    )\n}\n\n\n\nconst OpinionRegister = () => {\n\n    const [value, setValue] = useState(\"sample\")\n    const size = 'default'\n    const color = 'blue'\n    const children = '등록하기'\n    const props = ''\n\n    return <>\n        <table>\n            <tr>\n                <td><h2 className={\"text-2xl\"}>게시글 작성하기</h2></td>\n                <td>\n                    <button\n                        className={`btn btn-circle btn-circle-${size} \n                                btn-flat btn-flat-${color}`}{...props}>\n                        {children}\n                    </button>\n                    <button\n                    className={`btn btn-circle btn-circle-${size} \n                                btn-flat btn-flat-${color}`}{...props}>\n                    {children}\n                    </button>\n                </td>\n            </tr>\n        </table>\n        <div className=\"w-full mb-4\">\n            <div className=\"w-full\">\n                <ReactQuill theme=\"snow\" value={value} onChange={setValue} />\n            </div>\n        </div>\n        <CircularBadge color={\"blue\"} size={\"default\"} children={\"태그하기\"}/>\n    </>\n}\n\nOpinionRegister.propTypes = {\n    size: PropTypes.oneOf(['sm', 'default', 'lg']),\n    flat: PropTypes.bool,\n    raised: PropTypes.bool,\n    color: PropTypes.string,\n    children: PropTypes.any,\n}\nCircularBadge.propTypes = {\n    size: PropTypes.oneOf(['sm', 'default', 'lg']),\n    color: PropTypes.string,\n    children: PropTypes.any\n}\n\nexport default OpinionRegister;"]},"metadata":{},"sourceType":"module"}